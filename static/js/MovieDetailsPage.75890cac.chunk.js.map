{"version":3,"sources":["views/MovieDetailsPage.js"],"names":["Cast","lazy","Reviews","MovieDetailsPage","history","useHistory","location","useLocation","movieId","useParams","useRouteMatch","url","path","useState","movie","setMovie","useEffect","fetchMoviesId","then","type","onClick","push","state","from","src","IMAGE_URL","poster_path","alt","title","vote_average","overview","genres","map","genre","name","join","to","className","styles","link","activeClassName","activeLink","fallback"],"mappings":"iQAMMA,EAAOC,gBAAK,kBAAM,gCAClBC,EAAUD,gBAAK,kBAAM,gCAEZ,SAASE,IACpB,IAAMC,EAAUC,cACVC,EAAWC,cACTC,EAAYC,cAAZD,QACR,EAAsBE,cAAdC,EAAR,EAAQA,IAAKC,EAAb,EAAaA,KACb,EAA0BC,mBAAS,MAAnC,mBAAOC,EAAP,KAAcC,EAAd,KAIAC,qBAAU,WACNC,YAAcT,GAASU,MAAK,SAAAJ,GACxBC,EAASD,QAGd,CAACN,IAMJ,OACI,mCACKM,GACG,qCACI,wBAAQK,KAAK,SAASC,QARrB,WAAO,IAAD,IACnBhB,EAAQiB,KAAR,iBAAaf,QAAb,IAAaA,GAAb,UAAaA,EAAUgB,aAAvB,aAAa,EAAiBC,YAA9B,QAAsC,MAO1B,qBAEA,gCACI,qBAAKC,IAAKC,IAAYX,EAAMY,YAAaC,IAAKb,EAAMc,QACpD,6BAAKd,EAAMc,QACX,yCAAYd,EAAMe,gBAClB,2CAAcf,EAAMgB,YACpB,yCAAYhB,EAAMiB,OAAOC,KAAI,SAAAC,GAAK,OAAIA,EAAMC,QAAMC,KAAK,WAG3D,uBAEA,wDAEA,gCACI,cAAC,IAAD,CACIC,GAAE,UAAKzB,EAAL,SACF0B,UAAWC,IAAOC,KAClBC,gBAAiBF,IAAOG,WAH5B,kBAQA,cAAC,IAAD,CACIL,GAAE,UAAKzB,EAAL,YACF0B,UAAWC,IAAOC,KAClBC,gBAAiBF,IAAOG,WAH5B,wBASJ,uBAEA,cAAC,WAAD,CAAUC,SAAU,cAAC,IAAD,IAApB,SACI,eAAC,IAAD,WACI,cAAC,IAAD,CAAO9B,KAAI,UAAKA,EAAL,SAAX,SACI,cAACZ,EAAD,CAAMQ,QAASA,MAGnB,cAAC,IAAD,CAAOI,KAAI,UAAKA,EAAL,YAAX,SACI,cAACV,EAAD,CAASM,QAASA","file":"static/js/MovieDetailsPage.75890cac.chunk.js","sourcesContent":["import { useState, useEffect, lazy, Suspense } from 'react';\r\nimport { NavLink, Switch, Route, useParams, useRouteMatch, useHistory, useLocation } from 'react-router-dom';\r\nimport Loader from '../components/Loader'\r\nimport { fetchMoviesId, IMAGE_URL } from '../services/api';\r\nimport styles from '../components/Navigation/Navigation.module.css';\r\n\r\nconst Cast = lazy(() => import('./Cast') /* webpackChunkName: \"Cast\" */);\r\nconst Reviews = lazy(() => import('./Reviews') /* webpackChunkName: \"Reviews\" */);\r\n\r\nexport default function MovieDetailsPage() {\r\n    const history = useHistory();\r\n    const location = useLocation();\r\n    const { movieId } = useParams();\r\n    const { url, path } = useRouteMatch();\r\n    const [movie, setMovie] = useState(null);\r\n    \r\n    // console.log(param);\r\n\r\n    useEffect(() => {\r\n        fetchMoviesId(movieId).then(movie => {\r\n            setMovie(movie);\r\n            // console.log(movie)\r\n        });\r\n    }, [movieId]);\r\n\r\n    const onGoBack = () => {\r\n        history.push(location?.state?.from ?? '/');\r\n    }\r\n\r\n    return (\r\n        <>\r\n            {movie && (\r\n                <>\r\n                    <button type=\"button\" onClick={onGoBack}>Go Back</button>\r\n\r\n                    <div>\r\n                        <img src={IMAGE_URL + movie.poster_path} alt={movie.title} />\r\n                        <h2>{movie.title}</h2>\r\n                        <p>Rating: {movie.vote_average}</p>\r\n                        <p>Overview: {movie.overview}</p>\r\n                        <p>Genres: {movie.genres.map(genre => genre.name).join(' ')}</p>\r\n                    </div>\r\n\r\n                    <hr />\r\n\r\n                    <h3>Additional information</h3>\r\n            \r\n                    <nav>\r\n                        <NavLink\r\n                            to={`${url}/cast`}\r\n                            className={styles.link}\r\n                            activeClassName={styles.activeLink}\r\n                        >\r\n                            Cast\r\n                        </NavLink>\r\n\r\n                        <NavLink\r\n                            to={`${url}/reviews`}\r\n                            className={styles.link}\r\n                            activeClassName={styles.activeLink}\r\n                        >\r\n                            Reviews\r\n                        </NavLink>\r\n                    </nav>\r\n\r\n                    <hr />\r\n                    \r\n                    <Suspense fallback={<Loader />}>\r\n                        <Switch>\r\n                            <Route path={`${path}/cast`}>\r\n                                <Cast movieId={movieId} />\r\n                            </Route>\r\n\r\n                            <Route path={`${path}/reviews`}>\r\n                                <Reviews movieId={movieId} />\r\n                            </Route>\r\n                    </Switch>\r\n                    </Suspense>\r\n                </>\r\n            )}\r\n        </>\r\n    )\r\n};"],"sourceRoot":""}